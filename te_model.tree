module: ietf-te
   +--rw te!
      +--rw globals
      |  +--rw config
      |  |  +--rw named-admin-groups* [name]
      {te-types:extended-admin-groups,te-types:
      named-extended-admin-groups}?
      |  |  |  +--rw name            string
      |  |  |  +--rw bit-position?   uint32
      |  |  +--rw named-srlgs* [name] {te-types:named-srlg-groups}?
      |  |  |  +--rw name     string
      |  |  |  +--rw group?   te-types:srlg
      |  |  +--rw named-explicit-paths* [name]
      |  |  |  +--rw name                      string
      |  |  |  +--rw explicit-route-objects* [index]
      |  |  |     +--rw index                   uint8
      |  |  |     +--rw explicit-route-usage?   identityref
      |  |  |     +--rw (type)?
      |  |  |        +--:(ipv4-address)
      |  |  |        |  +--rw v4-address?       inet:ipv4-address
      |  |  |        |  +--rw v4-prefix-length? uint8
      |  |  |        |  +--rw v4-loose?         boolean
      |  |  |        +--:(ipv6-address)
      |  |  |        |  +--rw v6-address?       inet:ipv6-address
      |  |  |        |  +--rw v6-prefix-length? uint8
      |  |  |        |  +--rw v6-loose?         boolean
      |  |  |        +--:(as-number)
      |  |  |        |  +--rw as-number?        uint16
      |  |  |        +--:(unnumbered-link)
      |  |  |        |  +--rw router-id?        inet:ip-address
      |  |  |        |  +--rw interface-id?     uint32
      |  |  |        +--:(label)
      |  |  |           +--rw value?            uint32
      |  |  +--rw named-constraints* [name]
      {te-types:named-path-constraints}?
      |  |  |  +--rw name                               string
      |  |  |  +--rw path-constraints
      |  |  |  |  +--rw topology-id?       te-types:te-topology-id
      |  |  |  |  +--rw cost-limit?        uint32
      |  |  |  |  +--rw hop-limit?         uint8
      |  |  |  |  +--rw metric-type?       identityref
      |  |  |  |  +--rw tiebreaker-type?   identityref
      |  |  |  |  +--rw ignore-overload?   boolean
      |  |  |  |  +--rw path-affinities {named-path-affinities}?
      |  |  |  |  |  +--rw (style)?
      |  |  |  |  |     +--:(values)
      |  |  |  |  |     |  +--rw value?         uint32
      |  |  |  |  |     |  +--rw mask?          uint32
      |  |  |  |  |     +--:(named)
      |  |  |  |  |        +--rw constraints* [usage]
      |  |  |  |  |           +--rw usage         identityref
      |  |  |  |  |           +--rw constraint
      |  |  |  |  |              +--rw affinity-names* [name]
      |  |  |  |  |                 +--rw name    string
      |  |  |  |  +--rw path-srlgs
      |  |  |  |     +--rw (style)?
      |  |  |  |        +--:(values)
      |  |  |  |        |  +--rw usage?         identityref
      |  |  |  |        |  +--rw values*        te-types:srlg
      |  |  |  |        +--:(named)
      |  |  |  |           +--rw constraints* [usage]
      |  |  |  |              +--rw usage         identityref
      |  |  |  |              +--rw constraint
      |  |  |  |                 +--rw srlg-names* [name]
      |  |  |  |                    +--rw name    string
      |  |  |  +--rw te-sr-mpls:adjacency-protection?   identityref
      |  |  +--rw te-dev:lsp-install-interval?        uint32
      |  |  +--rw te-dev:lsp-cleanup-interval?        uint32
      |  |  +--rw te-dev:lsp-invalidation-interval?   uint32
      |  +--ro state
      |     +--ro named-admin-groups* [name]
      {te-types:extended-admin-groups,te-types:
      named-extended-admin-groups}?
      |     |  +--ro name            string
      |     |  +--ro bit-position?   uint32
      |     +--ro named-srlgs* [name] {te-types:named-srlg-groups}?
      |     |  +--ro name     string
      |     |  +--ro group?   te-types:srlg
      |     +--ro named-explicit-paths* [name]
      |     |  +--ro name                      string
      |     |  +--ro explicit-route-objects* [index]
      |     |     +--ro index                   uint8
      |     |     +--ro explicit-route-usage?   identityref
      |     |     +--ro (type)?
      |     |        +--:(ipv4-address)
      |     |        |  +--ro v4-address?       inet:ipv4-address
      |     |        |  +--ro v4-prefix-length? uint8
      |     |        |  +--ro v4-loose?         boolean
      |     |        +--:(ipv6-address)
      |     |        |  +--ro v6-address?       inet:ipv6-address
      |     |        |  +--ro v6-prefix-length? uint8
      |     |        |  +--ro v6-loose?         boolean
      |     |        +--:(as-number)
      |     |        |  +--ro as-number?        uint16
      |     |        +--:(unnumbered-link)
      |     |        |  +--ro router-id?        inet:ip-address
      |     |        |  +--ro interface-id?     uint32
      |     |        +--:(label)
      |     |           +--ro value?            uint32
      |     +--ro named-constraints* [name]
      {te-types:named-path-constraints}?
      |     |  +--ro name                               string
      |     |  +--ro path-constraints
      |     |  |  +--ro topology-id?       te-types:te-topology-id
      |     |  |  +--ro cost-limit?        uint32
      |     |  |  +--ro hop-limit?         uint8
      |     |  |  +--ro metric-type?       identityref
      |     |  |  +--ro tiebreaker-type?   identityref
      |     |  |  +--ro ignore-overload?   boolean
      |     |  |  +--ro path-affinities {named-path-affinities}?
      |     |  |  |  +--ro (style)?
      |     |  |  |     +--:(values)
      |     |  |  |     |  +--ro value?         uint32
      |     |  |  |     |  +--ro mask?          uint32
      |     |  |  |     +--:(named)
      |     |  |  |        +--ro constraints* [usage]
      |     |  |  |           +--ro usage         identityref
      |     |  |  |           +--ro constraint
      |     |  |  |              +--ro affinity-names* [name]
      |     |  |  |                 +--ro name    string
      |     |  |  +--ro path-srlgs
      |     |  |     +--ro (style)?
      |     |  |        +--:(values)
      |     |  |        |  +--ro usage?         identityref
      |     |  |        |  +--ro values*        te-types:srlg
      |     |  |        +--:(named)
      |     |  |           +--ro constraints* [usage]
      |     |  |              +--ro usage         identityref
      |     |  |              +--ro constraint
      |     |  |                 +--ro srlg-names* [name]
      |     |  |                    +--ro name    string
      |     |  +--ro te-sr-mpls:adjacency-protection?   identityref
      |     +--ro te-dev:lsp-install-interval?        uint32
      |     +--ro te-dev:lsp-cleanup-interval?        uint32
      |     +--ro te-dev:lsp-invalidation-interval?   uint32
      |     +--ro te-dev:tunnels-counter?             uint32
      |     +--ro te-dev:lsps-counter?                uint32
      +--rw tunnels
      |  +--rw tunnel* [name]
      |  |  +--rw name             -> ../config/name
      |  |  +--rw identifier?      -> ../config/identifier
      |  |  +--rw config
      |  |  |  +--rw name?                               string
      |  |  |  +--rw type?                               identityref
      |  |  |  +--rw identifier?                         uint16
      |  |  |  +--rw description?                        string
      |  |  |  +--rw lsp-priority-setup?                 uint8
      |  |  |  +--rw lsp-priority-hold?                  uint8
      |  |  |  +--rw lsp-protection-type?                identityref
      |  |  |  +--rw admin-status?                       identityref
      |  |  |  +--rw source?                  inet:ip-address
      |  |  |  +--rw destination?             inet:ip-address
      |  |  |  +--rw src-tp-id?               binary
      |  |  |  +--rw dst-tp-id?               binary
      |  |  |  +--rw hierarchical-link-id
      |  |  |  |  +--rw local-te-node-id?      te-types:te-node-id
      |  |  |  |  +--rw local-te-link-tp-id?   te-types:te-tp-id
      |  |  |  |  +--rw remote-te-node-id?     te-types:te-node-id
      |  |  |  |  +--rw te-topology-id?        te-types:te-topology-id
      |  |  |  +--rw bidirectional
      |  |  |  |  +--rw association
      |  |  |  |     +--rw id?              uint16
      |  |  |  |     +--rw source?          inet:ip-address
      |  |  |  |     +--rw global-source?   inet:ip-address
      |  |  |  |     +--rw type?            identityref
      |  |  |  |     +--rw provisioing?     identityref
      |  |  |  +--rw te-dev:lsp-install-interval?        uint32
      |  |  |  +--rw te-dev:lsp-cleanup-interval?        uint32
      |  |  |  +--rw te-dev:lsp-invalidation-interval?   uint32
      |  |  |  +--rw (te-mpls:routing-choice)?
      |  |  |  |  +--:(te-mpls:autoroute)
      |  |  |  |  |  +--rw te-mpls:autoroute-announce!
      |  |  |  |  |     +--rw te-mpls:routing-afs* inet:ip-version
      |  |  |  |  |     +--rw (te-mpls:metric-type)?
      |  |  |  |  |        +--:(te-mpls:metric)
      |  |  |  |  |        |  +--rw te-mpls:metric?            uint32
      |  |  |  |  |        +--:(te-mpls:relative-metric)
      |  |  |  |  |        |  +--rw te-mpls:relative-metric?   int32
      |  |  |  |  |        +--:(te-mpls:absolute-metric)
      |  |  |  |  |           +--rw te-mpls:absolute-metric?   uint32
      |  |  |  |  +--:(te-mpls:forwarding-adjacency)
      |  |  |  |     +--rw te-mpls:forwarding-adjacency!
      |  |  |  |        +--rw te-mpls:holdtime?      uint32
      |  |  |  |        +--rw te-mpls:routing-afs*   inet:ip-version
      |  |  |  +--rw te-mpls:forwarding
      |  |  |     +--rw te-mpls:binding-label?   mpls:mpls-label
      |  |  |     +--rw te-mpls:load-share?      uint32
      |  |  |     +--rw (te-mpls:policy-type)?
      |  |  |        +--:(te-mpls:class)
      |  |  |        |  +--rw te-mpls:class
      |  |  |        |     +--rw te-mpls:class?   uint8
      |  |  |        +--:(te-mpls:group)
      |  |  |           +--rw te-mpls:group
      |  |  |              +--rw te-mpls:classes*   uint8
      |  |  +--ro state
      |  |  |  +--ro name?                     string
      |  |  |  +--ro type?                     identityref
      |  |  |  +--ro identifier?               uint16
      |  |  |  +--ro description?              string
      |  |  |  +--ro lsp-priority-setup?       uint8
      |  |  |  +--ro lsp-priority-hold?        uint8
      |  |  |  +--ro lsp-protection-type?      identityref
      |  |  |  +--ro admin-status?             identityref
      |  |  |  +--ro source?                   inet:ip-address
      |  |  |  +--ro destination?              inet:ip-address
      |  |  |  +--ro src-tp-id?                binary
      |  |  |  +--ro dst-tp-id?                binary
      |  |  |  +--ro hierarchical-link-id
      |  |  |  |  +--ro local-te-node-id?      te-types:te-node-id
      |  |  |  |  +--ro local-te-link-tp-id?   te-types:te-tp-id
      |  |  |  |  +--ro remote-te-node-id?     te-types:te-node-id
      |  |  |  |  +--ro te-topology-id?        te-types:te-topology-id
      |  |  |  +--ro bidirectional
      |  |  |  |  +--ro association
      |  |  |  |     +--ro id?              uint16
      |  |  |  |     +--ro source?          inet:ip-address
      |  |  |  |     +--ro global-source?   inet:ip-address
      |  |  |  |     +--ro type?            identityref
      |  |  |  |     +--ro provisioing?     identityref
      |  |  |  +--ro oper-status?                        identityref
      |  |  |  +--ro te-dev:lsp-install-interval?        uint32
      |  |  |  +--ro te-dev:lsp-cleanup-interval?        uint32
      |  |  |  +--ro te-dev:lsp-invalidation-interval?   uint32
      |  |  |  +--ro (te-mpls:routing-choice)?
      |  |  |  |  +--:(te-mpls:autoroute)
      |  |  |  |  |  +--ro te-mpls:autoroute-announce!
      |  |  |  |  |     +--ro te-mpls:routing-afs* inet:ip-version
      |  |  |  |  |     +--ro (te-mpls:metric-type)?
      |  |  |  |  |        +--:(te-mpls:metric)
      |  |  |  |  |        |  +--ro te-mpls:metric?            uint32
      |  |  |  |  |        +--:(te-mpls:relative-metric)
      |  |  |  |  |        |  +--ro te-mpls:relative-metric?   int32
      |  |  |  |  |        +--:(te-mpls:absolute-metric)
      |  |  |  |  |           +--ro te-mpls:absolute-metric?   uint32
      |  |  |  |  +--:(te-mpls:forwarding-adjacency)
      |  |  |  |     +--ro te-mpls:forwarding-adjacency!
      |  |  |  |        +--ro te-mpls:holdtime?      uint32
      |  |  |  |        +--ro te-mpls:routing-afs*   inet:ip-version
      |  |  |  +--ro te-mpls:forwarding
      |  |  |     +--ro te-mpls:binding-label?   mpls:mpls-label
      |  |  |     +--ro te-mpls:load-share?      uint32
      |  |  |     +--ro (te-mpls:policy-type)?
      |  |  |        +--:(te-mpls:class)
      |  |  |        |  +--ro te-mpls:class
      |  |  |        |     +--ro te-mpls:class?   uint8
      |  |  |        +--:(te-mpls:group)
      |  |  |           +--ro te-mpls:group
      |  |  |              +--ro te-mpls:classes*   uint8
      |  |  +--rw primary-paths* [name]
      |  |  |  +--rw name              -> ../config/name
      |  |  |  +--rw preference?       -> ../config/preference
      |  |  |  +--rw config
      |  |  |  |  +--rw name?                     string
      |  |  |  |  +--rw preference?               uint8
      |  |  |  |  +--rw compute-only?             empty
      |  |  |  |  +--rw named-path-constraint?    string
      {te-types:named-path-constraints}?
      |  |  |  |  +--rw path-constraints
      |  |  |  |  |  +--rw topology-id?       te-types:te-topology-id
      |  |  |  |  |  +--rw cost-limit?        uint32
      |  |  |  |  |  +--rw hop-limit?         uint8
      |  |  |  |  |  +--rw metric-type?       identityref
      |  |  |  |  |  +--rw tiebreaker-type?   identityref
      |  |  |  |  |  +--rw ignore-overload?   boolean
      |  |  |  |  |  +--rw path-affinities {named-path-affinities}?
      |  |  |  |  |  |  +--rw (style)?
      |  |  |  |  |  |     +--:(values)
      |  |  |  |  |  |     |  +--rw value?         uint32
      |  |  |  |  |  |     |  +--rw mask?          uint32
      |  |  |  |  |  |     +--:(named)
      |  |  |  |  |  |        +--rw constraints* [usage]
      |  |  |  |  |  |           +--rw usage         identityref
      |  |  |  |  |  |           +--rw constraint
      |  |  |  |  |  |              +--rw affinity-names* [name]
      |  |  |  |  |  |                 +--rw name    string
      |  |  |  |  |  +--rw path-srlgs
      |  |  |  |  |     +--rw (style)?
      |  |  |  |  |        +--:(values)
      |  |  |  |  |        |  +--rw usage?         identityref
      |  |  |  |  |        |  +--rw values*        te-types:srlg
      |  |  |  |  |        +--:(named)
      |  |  |  |  |           +--rw constraints* [usage]
      |  |  |  |  |              +--rw usage         identityref
      |  |  |  |  |              +--rw constraint
      |  |  |  |  |                 +--rw srlg-names* [name]
      |  |  |  |  |                    +--rw name    string
      |  |  |  |  +--rw (type)?
      |  |  |  |  |  +--:(dynamic)
      |  |  |  |  |  |  +--rw dynamic?                  empty
      |  |  |  |  |  +--:(explicit)
      |  |  |  |  |     +--rw explicit-path-name?       string
      |  |  |  |  |     +--rw explicit-route-objects* [index]
      |  |  |  |  |        +--rw index                   uint8
      |  |  |  |  |        +--rw explicit-route-usage?   identityref
      |  |  |  |  |        +--rw (type)?
      |  |  |  |  |           +--:(ipv4-address)
      |  |  |  |  |           |  +--rw v4-address?inet:ipv4-address
      |  |  |  |  |           |  +--rw v4-prefix-length? uint8
      |  |  |  |  |           |  +--rw v4-loose?         boolean
      |  |  |  |  |           +--:(ipv6-address)
      |  |  |  |  |           |  +--rw v6-address?inet:ipv6-address
      |  |  |  |  |           |  +--rw v6-prefix-length? uint8
      |  |  |  |  |           |  +--rw v6-loose?         boolean
      |  |  |  |  |           +--:(as-number)
      |  |  |  |  |           |  +--rw as-number?        uint16
      |  |  |  |  |           +--:(unnumbered-link)
      |  |  |  |  |           |  +--rw router-id? inet:ip-address
      |  |  |  |  |           |  +--rw interface-id?     uint32
      |  |  |  |  |           +--:(label)
      |  |  |  |  |              +--rw value?                  uint32
      |  |  |  |  +--rw no-cspf?                  empty
      |  |  |  |  +--rw lockdown?                 empty
      |  |  |  +--ro state
      |  |  |  |  +--ro name?                     string
      |  |  |  |  +--ro preference?               uint8
      |  |  |  |  +--ro compute-only?             empty
      |  |  |  |  +--ro named-path-constraint?    string
      {te-types:named-path-constraints}?
      |  |  |  |  +--ro path-constraints
      |  |  |  |  |  +--ro topology-id?       te-types:te-topology-id
      |  |  |  |  |  +--ro cost-limit?        uint32
      |  |  |  |  |  +--ro hop-limit?         uint8
      |  |  |  |  |  +--ro metric-type?       identityref
      |  |  |  |  |  +--ro tiebreaker-type?   identityref
      |  |  |  |  |  +--ro ignore-overload?   boolean
      |  |  |  |  |  +--ro path-affinities {named-path-affinities}?
      |  |  |  |  |  |  +--ro (style)?
      |  |  |  |  |  |     +--:(values)
      |  |  |  |  |  |     |  +--ro value?         uint32
      |  |  |  |  |  |     |  +--ro mask?          uint32
      |  |  |  |  |  |     +--:(named)
      |  |  |  |  |  |        +--ro constraints* [usage]
      |  |  |  |  |  |           +--ro usage         identityref
      |  |  |  |  |  |           +--ro constraint
      |  |  |  |  |  |              +--ro affinity-names* [name]
      |  |  |  |  |  |                 +--ro name    string
      |  |  |  |  |  +--ro path-srlgs
      |  |  |  |  |     +--ro (style)?
      |  |  |  |  |        +--:(values)
      |  |  |  |  |        |  +--ro usage?         identityref
      |  |  |  |  |        |  +--ro values*        te-types:srlg
      |  |  |  |  |        +--:(named)
      |  |  |  |  |           +--ro constraints* [usage]
      |  |  |  |  |              +--ro usage         identityref
      |  |  |  |  |              +--ro constraint
      |  |  |  |  |                 +--ro srlg-names* [name]
      |  |  |  |  |                    +--ro name    string
      |  |  |  |  +--ro (type)?
      |  |  |  |  |  +--:(dynamic)
      |  |  |  |  |  |  +--ro dynamic?                  empty
      |  |  |  |  |  +--:(explicit)
      |  |  |  |  |     +--ro explicit-path-name?       string
      |  |  |  |  |     +--ro explicit-route-objects* [index]
      |  |  |  |  |        +--ro index                   uint8
      |  |  |  |  |        +--ro explicit-route-usage?   identityref
      |  |  |  |  |        +--ro (type)?
      |  |  |  |  |           +--:(ipv4-address)
      |  |  |  |  |           |  +--ro v4-address?inet:ipv4-address
      |  |  |  |  |           |  +--ro v4-prefix-length?       uint8
      |  |  |  |  |           |  +--ro v4-loose?               boolean
      |  |  |  |  |           +--:(ipv6-address)
      |  |  |  |  |           |  +--ro v6-address?inet:ipv6-address
      |  |  |  |  |           |  +--ro v6-prefix-length?       uint8
      |  |  |  |  |           |  +--ro v6-loose?               boolean
      |  |  |  |  |           +--:(as-number)
      |  |  |  |  |           |  +--ro as-number?              uint16
      |  |  |  |  |           +--:(unnumbered-link)
      |  |  |  |  |           |  +--ro router-id? inet:ip-address
      |  |  |  |  |           |  +--ro interface-id?           uint32
      |  |  |  |  |           +--:(label)
      |  |  |  |  |              +--ro value?                  uint32
      |  |  |  |  +--ro no-cspf?                  empty
      |  |  |  |  +--ro lockdown?                 empty
      |  |  |  |  +--ro lsp* [source destination tunnel-id lsp-id
      extended-tunnel-id type]
      |  |  |  |     +--ro source                ->
      ../../../../../../lsps-state/lsp/source
      |  |  |  |     +--ro destination           ->
      ../../../../../../lsps-state/lsp/destination
      |  |  |  |     +--ro tunnel-id             ->
      ../../../../../../lsps-state/lsp/tunnel-id
      |  |  |  |     +--ro lsp-id                ->
      ../../../../../../lsps-state/lsp/lsp-id
      |  |  |  |     +--ro extended-tunnel-id    ->
      ../../../../../../lsps-state/lsp/extended-tunnel-id
      |  |  |  |     +--ro type                  ->
      ../../../../../../lsps-state/lsp/type
      |  |  |  +--rw secondary-paths* [name]
      |  |  |  |  +--rw name                              ->
      ../config/name
      |  |  |  |  +--rw preference?                       ->
      ../config/preference
      |  |  |  |  +--rw config
      |  |  |  |  |  +--rw name?                     string
      |  |  |  |  |  +--rw preference?               uint8
      |  |  |  |  |  +--rw compute-only?             empty
      |  |  |  |  |  +--rw named-path-constraint?    string
      {te-types:named-path-constraints}?
      |  |  |  |  |  +--rw path-constraints
      |  |  |  |  |  |  +--rw topology-id?te-types:te-topology-id
      |  |  |  |  |  |  +--rw cost-limit?        uint32
      |  |  |  |  |  |  +--rw hop-limit?         uint8
      |  |  |  |  |  |  +--rw metric-type?       identityref
      |  |  |  |  |  |  +--rw tiebreaker-type?   identityref
      |  |  |  |  |  |  +--rw ignore-overload?   boolean
      |  |  |  |  |  |  +--rw path-affinities {named-path-affinities}?
      |  |  |  |  |  |  |  +--rw (style)?
      |  |  |  |  |  |  |     +--:(values)
      |  |  |  |  |  |  |     |  +--rw value?         uint32
      |  |  |  |  |  |  |     |  +--rw mask?          uint32
      |  |  |  |  |  |  |     +--:(named)
      |  |  |  |  |  |  |        +--rw constraints* [usage]
      |  |  |  |  |  |  |           +--rw usage         identityref
      |  |  |  |  |  |  |           +--rw constraint
      |  |  |  |  |  |  |              +--rw affinity-names* [name]
      |  |  |  |  |  |  |                 +--rw name    string
      |  |  |  |  |  |  +--rw path-srlgs
      |  |  |  |  |  |     +--rw (style)?
      |  |  |  |  |  |        +--:(values)
      |  |  |  |  |  |        |  +--rw usage?         identityref
      |  |  |  |  |  |        |  +--rw values*        te-types:srlg
      |  |  |  |  |  |        +--:(named)
      |  |  |  |  |  |           +--rw constraints* [usage]
      |  |  |  |  |  |              +--rw usage         identityref
      |  |  |  |  |  |              +--rw constraint
      |  |  |  |  |  |                 +--rw srlg-names* [name]
      |  |  |  |  |  |                    +--rw name    string
      |  |  |  |  |  +--rw (type)?
      |  |  |  |  |  |  +--:(dynamic)
      |  |  |  |  |  |  |  +--rw dynamic?                  empty
      |  |  |  |  |  |  +--:(explicit)
      |  |  |  |  |  |     +--rw explicit-path-name?       string
      |  |  |  |  |  |     +--rw explicit-route-objects* [index]
      |  |  |  |  |  |        +--rw index                   uint8
      |  |  |  |  |  |        +--rw explicit-route-usage?identityref
      |  |  |  |  |  |        +--rw (type)?
      |  |  |  |  |  |           +--:(ipv4-address)
      |  |  |  |  |  |           |  +--rw v4-address?inet:ipv4-address
      |  |  |  |  |  |           |  +--rw v4-prefix-length? uint8
      |  |  |  |  |  |           |  +--rw v4-loose?         boolean
      |  |  |  |  |  |           +--:(ipv6-address)
      |  |  |  |  |  |           |  +--rw v6-address?inet:ipv6-address
      |  |  |  |  |  |           |  +--rw v6-prefix-length? uint8
      |  |  |  |  |  |           |  +--rw v6-loose?         boolean
      |  |  |  |  |  |           +--:(as-number)
      |  |  |  |  |  |           |  +--rw as-number?        uint16
      |  |  |  |  |  |           +--:(unnumbered-link)
      |  |  |  |  |  |           |  +--rw router-id? inet:ip-address
      |  |  |  |  |  |           |  +--rw interface-id?     uint32
      |  |  |  |  |  |           +--:(label)
      |  |  |  |  |  |              +--rw value?            uint32
      |  |  |  |  |  +--rw no-cspf?                  empty
      |  |  |  |  |  +--rw lockdown?                 empty
      |  |  |  |  +--ro state
      |  |  |  |  |  +--ro name?                     string
      |  |  |  |  |  +--ro preference?               uint8
      |  |  |  |  |  +--ro compute-only?             empty
      |  |  |  |  |  +--ro named-path-constraint?    string
      {te-types:named-path-constraints}?
      |  |  |  |  |  +--ro path-constraints
      |  |  |  |  |  |  +--ro topology-id?te-types:te-topology-id
      |  |  |  |  |  |  +--ro cost-limit?        uint32
      |  |  |  |  |  |  +--ro hop-limit?         uint8
      |  |  |  |  |  |  +--ro metric-type?       identityref
      |  |  |  |  |  |  +--ro tiebreaker-type?   identityref
      |  |  |  |  |  |  +--ro ignore-overload?   boolean
      |  |  |  |  |  |  +--ro path-affinities {named-path-affinities}?
      |  |  |  |  |  |  |  +--ro (style)?
      |  |  |  |  |  |  |     +--:(values)
      |  |  |  |  |  |  |     |  +--ro value?         uint32
      |  |  |  |  |  |  |     |  +--ro mask?          uint32
      |  |  |  |  |  |  |     +--:(named)
      |  |  |  |  |  |  |        +--ro constraints* [usage]
      |  |  |  |  |  |  |           +--ro usage         identityref
      |  |  |  |  |  |  |           +--ro constraint
      |  |  |  |  |  |  |              +--ro affinity-names* [name]
      |  |  |  |  |  |  |                 +--ro name    string
      |  |  |  |  |  |  +--ro path-srlgs
      |  |  |  |  |  |     +--ro (style)?
      |  |  |  |  |  |        +--:(values)
      |  |  |  |  |  |        |  +--ro usage?         identityref
      |  |  |  |  |  |        |  +--ro values*        te-types:srlg
      |  |  |  |  |  |        +--:(named)
      |  |  |  |  |  |           +--ro constraints* [usage]
      |  |  |  |  |  |              +--ro usage         identityref
      |  |  |  |  |  |              +--ro constraint
      |  |  |  |  |  |                 +--ro srlg-names* [name]
      |  |  |  |  |  |                    +--ro name    string
      |  |  |  |  |  +--ro (type)?
      |  |  |  |  |  |  +--:(dynamic)
      |  |  |  |  |  |  |  +--ro dynamic?                  empty
      |  |  |  |  |  |  +--:(explicit)
      |  |  |  |  |  |     +--ro explicit-path-name?       string
      |  |  |  |  |  |     +--ro explicit-route-objects* [index]
      |  |  |  |  |  |        +--ro index                   uint8
      |  |  |  |  |  |        +--ro explicit-route-usage?identityref
      |  |  |  |  |  |        +--ro (type)?
      |  |  |  |  |  |           +--:(ipv4-address)
      |  |  |  |  |  |           |  +--ro v4-address?inet:ipv4-address
      |  |  |  |  |  |           |  +--ro v4-prefix-length?uint8
      |  |  |  |  |  |           |  +--ro v4-loose?        boolean
      |  |  |  |  |  |           +--:(ipv6-address)
      |  |  |  |  |  |           |  +--ro v6-address?inet:ipv6-address
      |  |  |  |  |  |           |  +--ro v6-prefix-length?uint8
      |  |  |  |  |  |           |  +--ro v6-loose?        boolean
      |  |  |  |  |  |           +--:(as-number)
      |  |  |  |  |  |           |  +--ro as-number?       uint16
      |  |  |  |  |  |           +--:(unnumbered-link)
      |  |  |  |  |  |           |  +--ro router-id?inet:ip-address
      |  |  |  |  |  |           |  +--ro interface-id?    uint32
      |  |  |  |  |  |           +--:(label)
      |  |  |  |  |  |              +--ro value?           uint32
      |  |  |  |  |  +--ro no-cspf?                  empty
      |  |  |  |  |  +--ro lockdown?                 empty
      |  |  |  |  |  +--ro lsp* [source]
      |  |  |  |  |     +--ro source                ->
      ../../../../../../../lsps-state/lsp/source
      |  |  |  |  |     +--ro destination?          ->
      ../../../../../../../lsps-state/lsp/destination
      |  |  |  |  |     +--ro tunnel-id?            ->
      ../../../../../../../lsps-state/lsp/tunnel-id
      |  |  |  |  |     +--ro lsp-id?               ->
      ../../../../../../../lsps-state/lsp/lsp-id
      |  |  |  |  |     +--ro extended-tunnel-id?   ->
      ../../../../../../../lsps-state/lsp/extended-tunnel-id
      |  |  |  |  |     +--ro type?                 ->
      ../../../../../../../lsps-state/lsp/type
      |  |  |  |  +--rw te-sr-mpls:path-signaling-type?   identityref
      |  |  |  +--rw te-sr-mpls:path-signaling-type?   identityref
      |  |  +---x tunnel-action
      |  |     +---w input
      |  |     |  +---w action-type?   identityref
      |  |     +--ro output
      |  |        +--ro action-result?   identityref
      |  +--rw tunnel-p2mp* [name]
      |     +--rw name          -> ../config/name
      |     +--rw identifier?   -> ../config/identifier
      |     +--rw config
      |     |  +--rw name?                  string
      |     |  +--rw type?                  identityref
      |     |  +--rw identifier?            uint16
      |     |  +--rw description?           string
      |     |  +--rw lsp-priority-setup?    uint8
      |     |  +--rw lsp-priority-hold?     uint8
      |     |  +--rw lsp-protection-type?   identityref
      |     |  +--rw admin-status?          identityref
      |     +--ro state
      |        +--ro name?                  string
      |        +--ro type?                  identityref
      |        +--ro identifier?            uint16
      |        +--ro description?           string
      |        +--ro lsp-priority-setup?    uint8
      |        +--ro lsp-priority-hold?     uint8
      |        +--ro lsp-protection-type?   identityref
      |        +--ro admin-status?          identityref
      +--ro lsps-state
      |  +--ro lsp* [source destination tunnel-id lsp-id
      extended-tunnel-id type]
      |     +--ro source                      inet:ip-address
      |     +--ro destination                 inet:ip-address
      |     +--ro tunnel-id                   uint16
      |     +--ro lsp-id                      uint16
      |     +--ro extended-tunnel-id          inet:ip-address
      |     +--ro type                        identityref
      |     +--ro oper-status?                identityref
      |     +--ro origin-type?                enumeration
      |     +--ro lsp-resource-status?        enumeration
      |     +--ro lsp-protection-role?        enumeration
      |     +--ro lsp-carry-normal-traffic?   empty
      |     +--ro lsp-record-route
      |     |  +--ro record-route-subobjects* [subobject-index]
      |     |     +--ro subobject-index     uint32
      |     |     +--ro (type)?
      |     |        +--:(ipv4-address)
      |     |        |  +--ro v4-address?         inet:ipv4-address
      |     |        |  +--ro v4-prefix-length?   uint8
      |     |        |  +--ro v4-flags?           uint8
      |     |        +--:(ipv6-address)
      |     |        |  +--ro v6-address?         inet:ipv6-address
      |     |        |  +--ro v6-prefix-length?   uint8
      |     |        |  +--ro v6-flags?           uint8
      |     |        +--:(unnumbered-link)
      |     |        |  +--ro router-id?          inet:ip-address
      |     |        |  +--ro interface-id?       uint32
      |     |        +--:(label)
      |     |           +--ro value?              uint32
      |     |           +--ro flags?              uint8
      |     +--ro te-dev:lsp-timers
      |     |  +--ro te-dev:life-time?         uint32
      |     |  +--ro te-dev:time-to-install?   uint32
      |     |  +--ro te-dev:time-to-die?       uint32
      |     +--ro te-dev:downstream-info
      |     |  +--ro te-dev:nhop?                 inet:ip-address
      |     |  +--ro te-dev:outgoing-interface?   if:interface-ref
      |     |  +--ro te-dev:neighbor?             inet:ip-address
      |     |  +--ro te-dev:label?                uint32
      |     +--ro te-dev:upstream-info
      |        +--ro te-dev:phop?       inet:ip-address
      |        +--ro te-dev:neighbor?   inet:ip-address
      |        +--ro te-dev:label?      uint32
      +--rw te-dev:interfaces
         +--rw te-dev:config
         |  +--rw te-dev:thresholds
         |     +--rw (te-dev:type)?
         |        +--:(te-dev:equal-steps)
         |        |  +--rw (te-dev:equal-step-type)?
         |        |     +--:(te-dev:up-down-different-step)
         |        |     |  +--rw te-dev:up-step?      uint8
         |        |     |  +--rw te-dev:down-step?    uint8
         |        |     +--:(te-dev:up-down-same-step)
         |        |        +--rw te-dev:step?         uint8
         |        +--:(te-dev:unequal-steps)
         |           +--rw te-dev:up-steps* [value]
         |           |  +--rw te-dev:value    uint8
         |           +--rw te-dev:down-steps* [value]
         |              +--rw te-dev:value    uint8
         +--ro te-dev:state
         |  +--ro te-dev:thresholds
         |     +--ro (te-dev:type)?
         |        +--:(te-dev:equal-steps)
         |        |  +--ro (te-dev:equal-step-type)?
         |        |     +--:(te-dev:up-down-different-step)
         |        |     |  +--ro te-dev:up-step?      uint8
         |        |     |  +--ro te-dev:down-step?    uint8
         |        |     +--:(te-dev:up-down-same-step)
         |        |        +--ro te-dev:step?         uint8
         |        +--:(te-dev:unequal-steps)
         |           +--ro te-dev:up-steps* [value]
         |           |  +--ro te-dev:value    uint8
         |           +--ro te-dev:down-steps* [value]
         |              +--ro te-dev:value    uint8
         +--rw te-dev:interface* [interface]
            +--rw te-dev:interface    if:interface-ref
            +--rw te-dev:config
            |  +--rw te-dev:te-metric?te-types:te-metric
            |  +--rw (te-dev:admin-group-type)?
            |  |  +--:(te-dev:value-admin-groups)
            |  |  |  +--rw (te-dev:value-admin-group-type)?
            |  |  |     +--:(te-dev:admin-groups)
            |  |  |     |  +--rw te-dev:admin-group?
            te-types:admin-group
            |  |  |     +--:(te-dev:extended-admin-groups)
            {te-types:extended-admin-groups}?
            |  |  |        +--rw te-dev:extended-admin-group?
            te-types:extended-admin-group
            |  |  +--:(te-dev:named-admin-groups)
            |  |     +--rw te-dev:named-admin-groups*
            [named-admin-group] {te-types:extended-admin-groups,
            te-types:named-extended-admin-groups}?
            |  |        +--rw te-dev:named-admin-group    ->
            ../../../../../te:globals/config/named-admin-groups/name
            |  +--rw (te-dev:srlg-type)?
            |  |  +--:(te-dev:value-srlgs)
            |  |  |  +--rw te-dev:values* [value]
            |  |  |     +--rw te-dev:value    uint32
            |  |  +--:(te-dev:named-srlgs)
            |  |     +--rw te-dev:named-srlgs* [named-srlg]
            {te-types:named-srlg-groups}?
            |  |        +--rw te-dev:named-srlg    ->
            ../../../../../te:globals/config/named-srlgs/name
            |  +--rw te-dev:switching-capabilities*
            [switching-capability]
            |  |  +--rw te-dev:switching-capability    identityref
            |  |  +--rw te-dev:encoding?               identityref
            |  +--rw te-dev:thresholds
            |     +--rw (te-dev:type)?
            |        +--:(te-dev:equal-steps)
            |        |  +--rw (te-dev:equal-step-type)?
            |        |     +--:(te-dev:up-down-different-step)
            |        |     |  +--rw te-dev:up-step?      uint8
            |        |     |  +--rw te-dev:down-step?    uint8
            |        |     +--:(te-dev:up-down-same-step)
            |        |        +--rw te-dev:step?         uint8
            |        +--:(te-dev:unequal-steps)
            |           +--rw te-dev:up-steps* [value]
            |           |  +--rw te-dev:value    uint8
            |           +--rw te-dev:down-steps* [value]
            |              +--rw te-dev:value    uint8
            +--ro te-dev:state
               +--ro te-dev:te-metric?te-types:te-metric
               +--ro (te-dev:admin-group-type)?
               |  +--:(te-dev:value-admin-groups)
               |  |  +--ro (te-dev:value-admin-group-type)?
               |  |     +--:(te-dev:admin-groups)
               |  |     |  +--ro te-dev:admin-group?
               te-types:admin-group
               |  |     +--:(te-dev:extended-admin-groups)
               {te-types:extended-admin-groups}?
               |  |        +--ro te-dev:extended-admin-group?
               te-types:extended-admin-group
               |  +--:(te-dev:named-admin-groups)
               |     +--ro te-dev:named-admin-groups*
               [named-admin-group] {te-types:extended-admin-groups,
               te-types:named-extended-admin-groups}?
               |        +--ro te-dev:named-admin-group    ->
              ../../../../../te:globals/config/named-admin-groups/name
               +--ro (te-dev:srlg-type)?
               |  +--:(te-dev:value-srlgs)
               |  |  +--ro te-dev:values* [value]
               |  |     +--ro te-dev:value    uint32
               |  +--:(te-dev:named-srlgs)
               |     +--ro te-dev:named-srlgs* [named-srlg]
               {te-types:named-srlg-groups}?
               |        +--ro te-dev:named-srlg    ->
               ../../../../../te:globals/config/named-srlgs/name
               +--ro te-dev:switching-capabilities*
               [switching-capability]
               |  +--ro te-dev:switching-capability    identityref
               |  +--ro te-dev:encoding?               identityref
               +--ro te-dev:thresholds
               |  +--ro (te-dev:type)?
               |     +--:(te-dev:equal-steps)
               |     |  +--ro (te-dev:equal-step-type)?
               |     |     +--:(te-dev:up-down-different-step)
               |     |     |  +--ro te-dev:up-step?      uint8
               |     |     |  +--ro te-dev:down-step?    uint8
               |     |     +--:(te-dev:up-down-same-step)
               |     |        +--ro te-dev:step?         uint8
               |     +--:(te-dev:unequal-steps)
               |        +--ro te-dev:up-steps* [value]
               |        |  +--ro te-dev:value    uint8
               |        +--ro te-dev:down-steps* [value]
               |           +--ro te-dev:value    uint8
               +--ro te-dev:te-advertisements_state
                  +--ro te-dev:flood-interval?           uint32
                  +--ro te-dev:last-flooded-time?        uint32
                  +--ro te-dev:next-flooded-time?        uint32
                  +--ro te-dev:last-flooded-trigger?     enumeration
                  +--ro te-dev:advertized-level-areas* [level-area]
                     +--ro te-dev:level-area    uint32
rpcs:
   +---x globals-rpc
   +---x interfaces-rpc
   +---x tunnels-rpc
      +---w input
      |  +---w tunnel-info
      |     +---w (type)?
      |        +--:(tunnel-p2p)
      |        |  +---w p2p-id?    te:tunnel-ref
      |        +--:(tunnel-p2mp)
      |           +---w p2mp-id?   te:tunnel-p2mp-ref
      +--ro output
         +--ro result
            +--ro result?   enumeration
notifications:
   +---n globals-notif
   +---n tunnels-notif
module: ietf-te-device
rpcs:
   +---x interfaces-rpc
notifications:
   +---n interfaces-notif
